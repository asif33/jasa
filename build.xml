<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="jasa">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../usr/local/java/eclipse"/>
    <property name="jasa-research.location" value="../jasa-research"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="jabm.location" value="../jabm/jabm"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <import file="jasa.xml"/>
    <path id="JUnit 3.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_3.8.2.v3_8_2_v20100427-1100/junit.jar"/>
    </path>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.10.0.v4_10_0_v20120426-0900/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.1.0.v20090501071000.jar"/>
    </path>
    <path id="jabm.classpath">
        <pathelement location="${jabm.location}/bin"/>
        <pathelement location="${jabm.location}/lib/commons-collections-3.2.1/commons-collections-3.2.1.jar"/>
        <pathelement location="${jabm.location}/lib/apache-log4j-1.2.16/log4j-1.2.16.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-3d-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-3d-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-3d-demos-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-3d-demos-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-algorithms-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-algorithms-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-api-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-api-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-graph-impl-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-graph-impl-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-io-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-io-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-jai-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-jai-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-jai-samples-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-jai-samples-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-samples-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-samples-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-visualization-2.0.1-sources.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/jung-visualization-2.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/commons-logging-1.1.1/commons-logging-1.1.1.jar"/>
        <pathelement location="${jabm.location}/lib/bsh-2.0b4.jar"/>
        <pathelement location="${jabm.location}/lib/jfreechart-1.0.14/lib/jfreechart-1.0.14.jar"/>
        <pathelement location="${jabm.location}/lib/jfreechart-1.0.14/lib/jcommon-1.0.17.jar"/>
        <pathelement location="${jabm.location}/lib/aopalliance.jar"/>
        <pathelement location="${jabm.location}/lib/idw-gpl-1.6.1/lib/idw-gpl.jar"/>
        <pathelement location="${jabm.location}/lib/pf-joi.jar"/>
        <pathelement location="${jabm.location}/lib/pf.jar"/>
        <pathelement location="${jabm.location}/lib/spring-framework-3.2.3.RELEASE/libs/spring-aop-3.2.3.RELEASE.jar"/>
        <pathelement location="${jabm.location}/lib/spring-framework-3.2.3.RELEASE/libs/spring-beans-3.2.3.RELEASE.jar"/>
        <pathelement location="${jabm.location}/lib/spring-framework-3.2.3.RELEASE/libs/spring-core-3.2.3.RELEASE.jar"/>
        <pathelement location="${jabm.location}/lib/commons-math3-3.2/commons-math3-3.2.jar"/>
        <path refid="JUnit 4.libraryclasspath"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/collections-generic-4.01.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/colt-1.2.0.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/concurrent-1.3.4.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/stax-api-1.0.1.jar"/>
        <pathelement location="${jabm.location}/lib/jung-2.0.1/wstx-asl-3.2.6.jar"/>
    </path>
    <path id="jasa.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 3.libraryclasspath"/>
        <pathelement location="lib/trove-3.0.0a7/lib/trove-3.0.0a7.jar"/>
        <path refid="jabm.classpath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="etc">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${jabm.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build.xml" dir="${jabm.location}" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <src path="etc"/>
            <src path="test"/>
            <classpath refid="jasa.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects">
        <ant antfile="build.xml" dir="${jasa-research.location}" inheritAll="false" target="clean"/>
        <ant antfile="build.xml" dir="${jasa-research.location}" inheritAll="false" target="build">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="jabm ChiarellaAndIori.xml">
        <java classname="net.sourceforge.jabm.DesktopSimulationManager" failonerror="true" fork="yes">
            <jvmarg line="-Djabm.config=examples/ChiarellaAndIori.xml"/>
            <classpath refid="jasa.classpath"/>
        </java>
    </target>
    <target name="jabm CliffAndBruten.xml">
        <java classname="net.sourceforge.jabm.DesktopSimulationManager" failonerror="true" fork="yes">
            <jvmarg line="-Djabm.config=examples/CliffAndBruten.xml"/>
            <classpath refid="jasa.classpath"/>
        </java>
    </target>
    <target name="net.sourceforge.jasa.market">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="net.sourceforge.jasa.market.ClearingHouseAuctioneerTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.ContinuousDoubleAuctioneerTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.DirectRevelationTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.FourHeapTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.KPricingPolicyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.RandomRobinAuctionTest" todir="${junit.output.dir}"/>
            <classpath refid="jasa.classpath"/>
        </junit>
    </target>
    <target name="FourHeapTest">
        <java classname="net.sourceforge.jasa.market.FourHeapTest" failonerror="true" fork="yes">
            <classpath refid="jasa.classpath"/>
        </java>
    </target>
    <target name="test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="net.sourceforge.jasa.agent.AbstractTraderAgentTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.AdaptiveStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.InventoryTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.KaplanStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.MomentumStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.RandomConstrainedStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.RandomScheduleValuerTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.RandomUnconstrainedStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.RandomValuerTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.strategy.ChartistForecasterTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.strategy.FundamentalistForecasterTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.strategy.NoiseTraderForecastTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.agent.strategy.ReturnForecastStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.ClearingHouseAuctioneerTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.ContinuousDoubleAuctioneerTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.DirectRevelationTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.FourHeapTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.KPricingPolicyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.RandomRobinAuctionTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.market.auctioneer.SingleSidedPricingTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.replication.electricity.ElectricityStatsTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.replication.electricity.NPTReplicationTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.replication.zi.ZIPStrategyTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.replication.zi.ZITraderAgentTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.report.DynamicSurplusReportTest" todir="${junit.output.dir}"/>
            <test name="net.sourceforge.jasa.report.EquilibriaStatsTest" todir="${junit.output.dir}"/>
            <classpath refid="jasa.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
