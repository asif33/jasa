#
# This parameter file can be used to run a double auction experiment
# under the JADE agent platform.
#
# To run this experiment, use the command:
#
#  java jade.Boot -gui manager:uk.ac.liv.auction.agent.jade.AuctionManager
#

auction = uk.ac.liv.auction.agent.jade.JADEAuction
auction.maximumrounds = 50
auction.logger = uk.ac.liv.auction.stats.StatsMarketDataLogger
auction.auctioneer = uk.ac.liv.auction.core.ContinuousDoubleAuctioneer
auction.auctioneer.k = 0.5

# Maximum number of rounds
auction.maximumrounds = 10

# GUI console
auction.console = true

# Auctioneer
auction.auctioneer = uk.ac.liv.auction.core.ContinuousDoubleAuctioneer
auction.auctioneer.k = 0.5

# The logger to use
auction.auctioneer.logger = uk.ac.liv.auction.stats.StatsMarketDataLogger

# Two populations of trader agents
auction.numagenttypes = 2

# 1st population- 30 sellers bidding using the modified Roth-Erev 
# learning algorithm
auction.agenttype.0 = uk.ac.liv.auction.electricity.ElectricityTrader
auction.agenttype.0.numagents = 50
auction.agenttype.0.randomprivatevalue = true
auction.agenttype.0.capacity = 10
auction.agenttype.0.strategy = uk.ac.liv.auction.agent.StimuliResponseStrategy
auction.agenttype.0.strategy.learner = uk.ac.liv.ai.learning.RothErevLearner
auction.agenttype.0.isseller = true

# 2nd population- 30 buyers using the the modified
#  Roth-Erev learning algorithm
auction.agenttype.1 = uk.ac.liv.auction.electricity.ElectricityTrader
auction.agenttype.1.numagents = 50
auction.agenttype.1.randomprivatevalue = true
auction.agenttype.1.capacity = 20
auction.agenttype.1.strategy = uk.ac.liv.auction.agent.StimuliResponseStrategy
auction.agenttype.1.strategy.learner = uk.ac.liv.ai.learning.RothErevLearner
auction.agenttype.1.isseller = false

# log4j configuration
log4j.rootCategory=INFO, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%p] - %m%n
