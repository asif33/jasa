simulation.auction = uk.ac.liv.auction.core.RoundRobinAuction
simulation.auction.maximumrounds = 200
simulation.auction.auctioneer = uk.ac.liv.auction.core.ContinuousDoubleAuctioneer
simulation.auction.auctioneer.k = 0.5

# Get cummulative stats
simulation.logger = uk.ac.liv.auction.stats.StatsMarketDataLogger

# Show GUI console
simulation.console = true

# Gather meta-stats on market-equilibria
simulation.gatherstats = true
simulation.stats = uk.ac.liv.auction.stats.EquilibriaStats

# Two populations of agents
simulation.numagenttypes = 2

# 1st population- 5000 sellers bidding random markups
simulation.agenttype.0 = uk.ac.liv.auction.agent.ZITraderAgent
simulation.agenttype.0.numagents = 5000
simulation.agenttype.0.initialtradeentitlement = 1000
simulation.agenttype.0.strategy = uk.ac.liv.auction.agent.RandomConstrainedStrategy
simulation.agenttype.0.strategy.maxmarkup = 100
simulation.agenttype.0.isseller = true

# 2nd population- 5000 buyers using the Roth-Erev learning algorithm
simulation.agenttype.1 = uk.ac.liv.auction.agent.ZITraderAgent
simulation.agenttype.1.numagents = 5000
simulation.agenttype.1.initialtradeentitlement = 1000
simulation.agenttype.1.strategy = uk.ac.liv.auction.agent.StimuliResponseStrategy
simulation.agenttype.1.strategy.learner = uk.ac.liv.ai.learning.RothErevLearner
simulation.agenttype.1.isseller = false

# log4j configuration
log4j.rootCategory=INFO, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n
