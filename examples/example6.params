# 
#
# To run this example, run the following command:
#
#  ant run -Dparams=examples/example6.params
#

# Use a random-robin auction which will randomise the shouting order
simulation.auction = uk.ac.liv.auction.core.RandomRobinAuction

simulation.auction.maximumdays = 10000
simulation.auction.lengthofday = 20

simulation.auction.name = Example 6: Fixed supply and demand

# Use a double-auction with clearing occuring at the end of each round
simulation.auction.auctioneer = uk.ac.liv.auction.core.KDoubleAuctioneer

# Set the transaction price as a function of the market quote
simulation.auction.auctioneer.pricing = uk.ac.liv.auction.core.UniformPricingPolicy

# Set the transaction price halfway between the bid and the ask quote
simulation.auction.auctioneer.pricing.k = 0.5

# Configure a combination of four different reports
simulation.auction.report = uk.ac.liv.auction.stats.CombiAuctionReport
simulation.auction.report.n = 3

# The first report collects stats on the auction as it progresses
simulation.auction.report.0 = uk.ac.liv.auction.stats.PriceStatisticsReport

# The second report logs data to a graph on the console
simulation.auction.report.1 = uk.ac.liv.auction.stats.GraphReport

# Collect data on relative profits to each strategy
simulation.auction.report.2 = uk.ac.liv.auction.stats.StrategyPayoffReport
simulation.auction.report.2.quantity = 20

# Show GUI console
simulation.auction.console = true

# Two populations of agents
simulation.auction.agenttype.n = 2

simulation.auction.agenttype.0 = uk.ac.liv.auction.zi.ZITraderAgent
simulation.auction.agenttype.0.group = 0
simulation.auction.agenttype.0.numagents = 250
simulation.auction.agenttype.0.initialtradeentitlement = 20
simulation.auction.agenttype.0.valuer = uk.ac.liv.auction.agent.RandomValuer
simulation.auction.agenttype.0.valuer.minvalue = 50
simulation.auction.agenttype.0.valuer.maxvalue = 100
simulation.auction.agenttype.0.strategy = uk.ac.liv.auction.agent.StimuliResponseStrategy
simulation.auction.agenttype.0.strategy.markupscale = 10
simulation.auction.agenttype.0.strategy.learner = uk.ac.liv.ai.learning.NPTRothErevLearner
simulation.auction.agenttype.0.strategy.learner.k = 100
simulation.auction.agenttype.0.isseller = true

simulation.auction.agenttype.1 = uk.ac.liv.auction.zi.ZITraderAgent
simulation.auction.agenttype.1.group = 1
simulation.auction.agenttype.1.numagents = 250
simulation.auction.agenttype.1.initialtradeentitlement = 20
simulation.auction.agenttype.1.valuer = uk.ac.liv.auction.agent.RandomValuer
simulation.auction.agenttype.1.valuer.minvalue = 80
simulation.auction.agenttype.1.valuer.maxvalue = 150
simulation.auction.agenttype.1.strategy = uk.ac.liv.auction.agent.StimuliResponseStrategy
simulation.auction.agenttype.1.strategy.markupscale = 10
simulation.auction.agenttype.1.strategy.learner = uk.ac.liv.ai.learning.NPTRothErevLearner
simulation.auction.agenttype.1.strategy.learner.k = 100
simulation.auction.agenttype.1.isseller = false

# prng configuration

# Use the default (64-bit) Mersenne Twister PRNG
simulation.prng = uk.ac.liv.prng.MT

#  ..configured with the following seed
simulation.seed = 7842

# log4j configuration
log4j.rootCategory=INFO, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n
