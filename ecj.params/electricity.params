#
# Parameters for the fitness-landscape experiment described in
# "Applying Multi-Objective Evolutionary Computing to Auction Mechanism Design"
#  S. Phelps, S. Parsons, E. Sklar, P. McBurney
#  University of Liverpool Computer Science Department
#  Technical Report ULCS-02-031
#
# Run this experiment using the command:
#
#  java uk.ac.liv.auction.electricity.ElectricityAuctionSimulation examples/electricity.params
#

# Number of auction rounds
electricity.maxrounds = 1000

# Number of samples per value of k
electricity.iterations = 10000

# Output data
electricity.outputdir = results/electricity/test

# Use random private values
electricity.randomizer = uk.ac.liv.auction.electricity.StandardRandomizer

# Private value range
electricity.randomizer.minprivatevalue = 3
electricity.randomizer.maxprivatevalue = 10

# PRNG seed
electricity.randomizer.seed = 1726567842

# Number of sellers
electricity.ns = 30

# Number of buyers
electricity.nb = 30

# Buyer capacity
electricity.cs = 10

# Seller capacity
electricity.cb = 10

# Buyers' strategy
electricity.strategy.buyer = uk.ac.liv.auction.agent.StimuliResponseStrategy
electricity.strategy.buyer.markupscale = 0.1
electricity.strategy.buyer.learner = uk.ac.liv.ai.learning.NPTRothErevLearner
electricity.strategy.buyer.learner.r = 0.10
electricity.strategy.buyer.learner.e = 0.20
electricity.strategy.buyer.learner.k = 100
electricity.strategy.buyer.learner.x = 1
electricity.strategy.buyer.learner.s1 = 1

# Sellers' strategy
electricity.strategy.seller = uk.ac.liv.auction.agent.StimuliResponseStrategy
electricity.strategy.seller.markupscale = 0.1
electricity.strategy.seller.learner = uk.ac.liv.ai.learning.NPTRothErevLearner
electricity.strategy.seller.learner.r = 0.10
electricity.strategy.seller.learner.e = 0.20
electricity.strategy.seller.learner.k = 100
electricity.strategy.seller.learner.x = 1
electricity.strategy.seller.learner.s1 = 1

# Auction protocol
electricity.auctioneer = uk.ac.liv.auction.core.ContinuousDoubleAuctioneer

# Number of different k values 
electricity.k0 = 0.0
electricity.k1 = 1.0
electricity.kdelta = 0.5

# Statistics to use
electricity.stats = uk.ac.liv.auction.electricity.ElectricityStats

# log4j configuration

log4j.rootCategory=INFO, stdout, file

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n

log4j.appender.file=org.apache.log4j.FileAppender
log4j.appender.file.File=results/electricity/eas.out
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%m%n

